#ifndef OSCILLOSCOPE_H
#define OSCILLOSCOPE_H

#define OSCILLOSCOPE_MAXIMUM_CHANNELS 256
#define OSC_BUFFER_LENGTH 10000000 // oscilloscope_buffer 
#define OSC_GROUPS 6
#define OSC_MAX_CHANNELS_PER_GROUP 16
#include <string>
#include "timeKeeper.h"
#include "dataBuffer.h"

using namespace std;

/***************************************************************
Class to take care of the oscilloscope in it own thread
***************************************************************/ 
class oscilloscope
{

 public:
  oscilloscope(dataBuffer* datab);
  ~oscilloscope();
  bool start_oscilloscope();
  bool stop_oscilloscope();
  
 private:
  dataBuffer* db;
  bool is_drawing; // in a drawing function
  bool is_displaying; // oscilloscope active
  bool draw_only_mean;
  timeKeeper tk;

  // 3 buffers to have simpler functions
  double* buffer;
  double* transfer_buffer;
  double* show_buffer;
  int buffer_size;
  int transfer_buffer_size;
  int show_buffer_size;
  int num_channels;
  int sampling_rate;




};



#endif
